openapi: 3.0.0
info:
  description: "The FAQ system agent of the Isagog Faq System (DQA)"
  version: "1.0.0"
  title: "Isagog Faq System"
  contact:
    email: "admin@isagog.com"
servers:
  - url: "http://localhost"
    variables:
      port:
        default: "3500"
      basePath:
        default: "/"
tags:
  - name: "faq"
    description: "Query the FAQ system"
paths:
  /categories:
    get:
      tags:
        - "faq"
      summary: "Get the list of all the categories"
      operationId: "categories"
      responses:
        200:
          $ref: "#/components/responses/Categories"
  /categories/{categoryId}:
    post:
      tags:
        - "faq"
      summary: "Update the threshold value"
      operationId: "updateThreshold"
      parameters:
        - $ref: "#/components/parameters/CategoryId"
        - $ref: "#/components/parameters/Threshold"
      responses:
        200:
          $ref: "#/components/responses/CategoryUpdated"
  /sources:
    get:
      tags:
        - "faq"
      summary: "Get the list of all the sources"
      operationId: "sources"
      responses:
        200:
          $ref: "#/components/responses/Sources"
  /faqs/compare:
    get:
      tags:
        - "faq"
      summary: "Compare and search similar FAQs"
      operationId: "compare"
      parameters:
        - $ref: "#/components/parameters/Question"
        - $ref: "#/components/parameters/Confidence"
        - $ref: "#/components/parameters/Category"
        - $ref: "#/components/parameters/Source"
      responses:
        200:
          $ref: "#/components/responses/Faqs"
  /faqs/search:
    get:
      tags:
        - "faq"
      summary: "Get the FAQs list"
      operationId: "faqs"
      parameters:
        - $ref: "#/components/parameters/Size"
        - $ref: "#/components/parameters/From"
      responses:
        200:
          $ref: "#/components/responses/Faqs"
  /faqs/add:
    post:
      tags:
        - "faq"
      summary: "Add FAQs"
      operationId: "addFaqs"
      requestBody:
        $ref: "#/components/requestBodies/AddingFaqs"
      responses:
        200:
          $ref: "#/components/responses/Add"
  /faqs/{faqId}:
    post:
      tags:
        - "faq"
      summary: "Update a FAQ"
      operationId: "updateFaq"
      parameters:
        - $ref: "#/components/parameters/FaqId"
      requestBody:
        $ref: '#/components/requestBodies/UpdateFaq'
      responses:
        200:
          $ref: "#/components/responses/Update"
  /faqs/{faqId}/delete:
    delete:
      tags:
        - "faq"
      summary: "Delete a FAQ"
      operationId: "deleteFaq"
      parameters:
        - $ref: "#/components/parameters/FaqId"
      responses:
        200:
          $ref: "#/components/responses/Delete"
components:
  parameters:
    FaqId:
      name: "faqId"
      in: "path"
      description: "the Faq ID"
      required: true
      schema:
        type: "string"
    CategoryId:
      name: "categoryId"
      in: "path"
      description: "the category ID"
      required: true
      schema:
        type: "string"
    Threshold:
      name: "threshold"
      in: "query"
      description: "the category threshold"
      required: true
      schema:
        type: "number"
        format: "double"
    Question:
      name: "question"
      in: "query"
      description: "The question to search"
      required: true
      schema:
        type: "string"
    Confidence:
      name: "confidence"
      in: "query"
      description: "whether to fetch only the FAQs that pass the category threshold"
      required: true
      schema:
        type: "boolean"
        default: true
    Category:
      name: "category"
      in: "query"
      description: "the category filter. To fetch only the FAQs of this category"
      required: false
      schema:
        type: "string"
    Source:
      name: "source"
      in: "query"
      description: "the source filter. To fetch only the FAQs of this source"
      required: false
      schema:
        type: "string"
    Size:
      name: "size"
      in: "query"
      description: "the number of FAQs to return"
      required: true
      schema:
        type: "integer"
        minimum: 1
        maximum: 50
    From:
      name: "from"
      in: "query"
      description: "the number of FAQs to skip before starting to collect the result set"
      required: true
      schema:
        type: "integer"
        minimum: 0
  requestBodies:
    AddingFaqs:
      description: "the bodies of the adding FAQs"
      required: true
      content:
        application/json:
          schema:
            description: "the list of FAQs to add"
            type: "array"
            items:
              $ref: '#/components/schemas/FaqBody'
    UpdateFaq:
      description: "the partial body of a FAQ"
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FaqPartialBody'
  responses:
    Categories:
      description: "Success"
      content:
        application/json:
          schema:
            description: "the list of all the categories"
            type: "array"
            items:
              $ref: "#/components/schemas/Category"
    CategoryUpdated:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
    Sources:
      description: "the list of all the sources"
      content:
        application/json:
          schema:
            description: "List of Sources"
            type: "array"
            items:
              $ref: "#/components/schemas/Source"
    Faqs:
      description: "success"
      content:
        application/json:
          schema:
            description: "a list of Faqs"
            type: "array"
            items:
              $ref: "#/components/schemas/Faq"
    Add:
      description: "request handled"
      content:
        application/json:
          schema:
            description: "the list of added FAQs"
            type: "array"
            items:
              $ref: "#/components/schemas/AddResponse"
    Update:
      description: "request handled"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateResponse"
    Delete:
      description: "request handled"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteResponse"
  schemas:
    Category:
      description: "a category"
      type: "object"
      required:
        - "id"
        - "name"
        - "threshold"
      properties:
        id:
          description: "the category ID"
          type: "string"
        name:
          description: "the category name"
          type: "string"
        threshold:
          description: "the score threshold for the category"
          type: "number"
          format: "double"
    Source:
      description: "a source of FAQs"
      type: "object"
      required:
        - "id"
        - "name"
      properties:
        id:
          description: "the source ID"
          type: "string"
        name:
          description: "the source name"
          type: "string"
    Faq:
      allOf:
        - $ref: "#/components/schemas/FaqBody"
        - description: "a FAQ"
          type: "object"
          required:
            - "id"
            - "score"
          properties:
            id:
              description: "the FAQ ID"
              type: "string"
            score:
              description: "the FAQ score"
              type: "number"
              format: "double"
    FaqBody:
      type: "object"
      required:
        - "question"
        - "answer"
        - "category"
        - "source"
      properties:
        question:
          type: "string"
        answer:
          type: "string"
        category:
          type: "string"
        source:
          type: "string"
        verified_at:
          $ref: "#/components/schemas/DateStr"
    FaqPartialBody:
      type: "object"
      properties:
        question:
          type: "string"
        answer:
          type: "string"
        category:
          type: "string"
        source:
          type: "string"
        verified_at:
          $ref: "#/components/schemas/DateStr"
    AddResponse:
      description: "the response to a FAQ creation request"
      type: "object"
      required:
        - "id"
        - "question"
        - "created"
      properties:
        id:
          description: "the FAQ ID"
          type: "string"
        question:
          description: "the question of the FAQ"
          type: "string"
        created:
          description: "whether the FAQ has been created"
          type: "boolean"
    UpdateResponse:
      description: "the response to a FAQ update request"
      type: "object"
      required:
        - "id"
        - "updated"
      properties:
        id:
          description: "the FAQ ID"
          type: "string"
        updated:
          description: "whether the FAQ has been updated"
          type: "boolean"
    DeleteResponse:
      description: "the response to a FAQ cancellation request"
      type: "object"
      required:
        - "id"
        - "deleted"
      properties:
        id:
          description: "the FAQ ID"
          type: "string"
        deleted:
          description: "whether the FAQ has been deleted"
          type: "boolean"
    DateStr:
      type: "string"
      format: "date-time"
      example: "2017-07-21T17:32:28Z"
