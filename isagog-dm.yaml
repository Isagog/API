openapi: "3.0.2"
info:
  description: "This is the dialog agent of the Isagog Dialog Platform."
  version: "1.0.0"
  title: "Isagog Dialog Manager"
  contact:
    email: "admin@isagog.com"
servers:
  - url: "http://localhost"
    variables:
      port:
        default: "3000"
      basePath:
        default: "/"
tags:
  - name: "session"
    description: "Manage the dialog sessions"
  - name: "dialog"
    description: "Manage a specific dialog"
paths:
  /session:
    post:
      tags:
        - "session"
      summary: "Create a new session"
      operationId: "newSession"
      responses:
        200:
          $ref: "#/components/responses/SessionId"
  /session/{sessionId}:
    delete:
      tags:
        - "session"
      summary: "Close a specific session"
      operationId: "closeSession"
      parameters:
        - $ref: "#/components/parameters/SessionId"
      responses:
        200:
          $ref: "#/components/responses/Confirmation"
  /dialog/{sessionId}/init:
    post:
      tags:
        - "dialog"
      summary: "Request to initialize the dialog"
      operationId: "initialize"
      parameters:
        - $ref: "#/components/parameters/SessionId"
      responses:
        200:
          $ref: "#/components/responses/RequestId"
  /dialog/{sessionId}/input/text:
    post:
      tags:
        - "dialog"
      summary: "Send a textual input of the user"
      operationId: "sendText"
      parameters:
        - $ref: "#/components/parameters/SessionId"
      requestBody:
        $ref: "#/components/requestBodies/InputText"
      responses:
        200:
          $ref: "#/components/responses/RequestId"
  /dialog/{sessionId}/input/form:
    post:
      tags:
        - "dialog"
      summary: "Send a form filled by the user"
      operationId: "sendForm"
      parameters:
        - $ref: "#/components/parameters/SessionId"
      requestBody:
        $ref: "#/components/requestBodies/FilledForm"
      responses:
        200:
          $ref: "#/components/responses/RequestId"
  /dialog/{sessionId}/input/selection:
    post:
      tags:
        - "dialog"
      summary: "Send the selection made by the user among more options"
      operationId: "sendSelection"
      parameters:
        - $ref: "#/components/parameters/SessionId"
      requestBody:
        $ref: "#/components/requestBodies/Selection"
      responses:
        200:
          $ref: "#/components/responses/RequestId"
  /dialog/{sessionId}/response/{requestId}:
    get:
      tags:
        - "dialog"
      summary: "Get the response to a given request of a specific session"
      operationId: "getResponse"
      parameters:
        - $ref: "#/components/parameters/SessionId"
        - $ref: "#/components/parameters/RequestId"
      responses:
        200:
          $ref: "#/components/responses/Response"
components:
  requestBodies:
    InputText:
      description: "The input text"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InputText"
    FilledForm:
      description: "A filled form"
      required: true
      content:
        application/json:
          schema:
            type: "array"
            description: "the list of filled elements"
            items:
              $ref: "#/components/schemas/FormElement"
    Selection:
      description: "A selection made among more options"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InputSelection"
  parameters:
    SessionId:
      name: "sessionId"
      in: "path"
      description: "the ID of an active session"
      required: true
      example: "BqZci3YbHA"
      schema:
        $ref: "#/components/schemas/AlphaNumId"
    RequestId:
      name: "requestId"
      in: "path"
      description: "the ID of a request made"
      required: true
      example: "rwgrBqOSSF"
      schema:
        $ref: "#/components/schemas/AlphaNumId"
  responses:
    Confirmation:
      description: "Confirmation"
      content:
        application/json:
          schema:
            type: "boolean"
            default: true
    RequestId:
      description: "A new request ID"
      content:
        text/plain:
          schema:
            $ref: "#/components/schemas/AlphaNumId"
    SessionId:
      description: "A new session ID"
      content:
        text/plain:
          schema:
            $ref: "#/components/schemas/AlphaNumId"
    Response:
      description: "The response to a request of the client"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Response"
  schemas:
    AlphaNumId:
      type: "string"
      minLength: 10
      maxLength: 10
      pattern: "^[a-zA-Z0-9]+$"
      example: "BqZci3YbHA"
    InputText:
      type: "object"
      required:
        - "text"
      properties:
        text:
          type: "string"
          example: "Here it is the input of the user"
    InputSelection:
      type: "object"
      required:
        - "id"
      properties:
        id:
          type: "string"
          description: "the ID of the option selected by the user"
    Response:
      type: "object"
      required:
        - "type"
      properties:
        type:
          type: "string"
      discriminator:
        propertyName: "type"
        mapping:
          ANSWER: "#/components/schemas/Answer"
          OPEN_REQUEST: "#/components/schemas/OpenRequest"
          SELECTION: "#/components/schemas/SelectionRequest"
          FORM: "#/components/schemas/FormRequest"
          WAIT: "#/components/schemas/WaitRequest"
    Answer:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: "object"
          required:
            - "results"
          properties:
            name:
              type: "array"
              items:
                $ref: "#/components/schemas/Result"
    OpenRequest:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: "object"
          required:
            - "request"
          properties:
            request:
              type: "string"
    SelectionRequest:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: "object"
          required:
            - "message"
            - "options"
          properties:
            message:
              type: "string"
            options:
              type: "array"
              items:
                $ref: "#/components/schemas/LabeledElement"
    FormRequest:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: "object"
          required:
            - "elements"
          properties:
            elements:
              type: "array"
              items:
                $ref: "#/components/schemas/LabeledElement"
    WaitRequest:
      allOf:
        - $ref: "#/components/schemas/Response"
    FormElement:
      type: "object"
      description: "the value given to an element of the form"
      required:
        - "id"
        - "value"
      properties:
        id:
          type: "integer"
          description: "the ID of the element, unique in the form"
        value:
          type: "string"
          description: "the value given for this element"
    Result:
      type: "object"
      required:
        - "text"
        - "score"
        - "documentURI"
      properties:
        text:
          type: "string"
        score:
          $ref: "#/components/schemas/Score"
        documentURI:
          type: "string"
          nullable: true
    LabeledElement:
      type: "object"
      required:
        - "id"
        - "label"
      properties:
        id:
          type: "number"
          format: "int32"
        label:
          type: "string"
    Score:
      type: "number"
      format: "double"
      example: 0.89
