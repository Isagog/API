openapi: 3.0.2
info:
  title: Isagog Dialog Manager
  version: 1.0.0
  description: This is the dialog agent of the Isagog Dialog Platform.
  contact:
    email: api@isagog.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost
    variables:
      port:
        default: '3000'
      basePath:
        default: /
tags:
  - name: session
    description: Manage the dialog sessions
  - name: dialog
    description: Manage a specific dialog
paths:
  /session:
    post:
      tags:
        - session
      summary: Create a new session
      operationId: newSession
      requestBody:
        $ref: '#/components/requestBodies/SessionInit'
      responses:
        200:
          $ref: '#/components/responses/SessionId'
  /session/close/{sessionId}:
    post:
      tags:
        - session
      summary: Close a specific session
      operationId: closeSession
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        $ref: '#/components/requestBodies/UserFeedback'
      responses:
        200:
          $ref: '#/components/responses/Confirmation'
  /dialog/{sessionId}/init:
    post:
      tags:
        - dialog
      summary: Request to initialize the dialog
      operationId: initialize
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        200:
          $ref: '#/components/responses/RequestId'
  /dialog/{sessionId}/input/text:
    post:
      tags:
        - dialog
      summary: Send a textual input of the user
      operationId: sendText
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        $ref: '#/components/requestBodies/InputText'
      responses:
        200:
          $ref: '#/components/responses/RequestId'
  /dialog/{sessionId}/input/form:
    post:
      tags:
        - dialog
      summary: Send a form filled by the user
      operationId: sendForm
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        $ref: '#/components/requestBodies/FilledForm'
      responses:
        200:
          $ref: '#/components/responses/RequestId'
  /dialog/{sessionId}/input/selection:
    post:
      tags:
        - dialog
      summary: Send the selection made by the user among more options
      operationId: sendSelection
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        $ref: '#/components/requestBodies/Selection'
      responses:
        200:
          $ref: '#/components/responses/RequestId'
  /dialog/{sessionId}/response/{requestId}:
    get:
      tags:
        - dialog
      summary: Get the response to a given request of a specific session
      operationId: getResponse
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/PrettyPrint'
      responses:
        200:
          $ref: '#/components/responses/Response'
components:
  requestBodies:
    SessionInit:
      description: Session initialization data
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SessionInit'
    InputText:
      description: The input text
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputText'
    FilledForm:
      description: A filled form
      required: true
      content:
        application/json:
          schema:
            type: array
            description: the list of filled elements
            items:
              $ref: '#/components/schemas/FormElement'
    Selection:
      description: A selection made among more options
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSelection'
    UserFeedback:
      description: The feedback of the user for the current dialog session
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserFeedback'
  parameters:
    SessionId:
      name: sessionId
      in: path
      description: the ID of an active session
      required: true
      example: BqZci3YbHA
      schema:
        $ref: '#/components/schemas/AlphaNumId'
    RequestId:
      name: requestId
      in: path
      description: the ID of a request made
      required: true
      example: rwgrBqOSSF
      schema:
        $ref: '#/components/schemas/AlphaNumId'
    PrettyPrint:
      name: pretty
      in: query
      description: if true the JSON response is indented, with newlines, for a better readability
      allowEmptyValue: true
      schema:
        type: boolean
  responses:
    Confirmation:
      description: Confirmation
      content:
        application/json:
          schema:
            type: boolean
            default: true
    RequestId:
      description: A new request ID
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/AlphaNumId'
    SessionId:
      description: A new session ID
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/AlphaNumId'
    Response:
      description: The response to a request of the client
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
  schemas:
    UserFeedback:
      type: object
      required:
        - rating
      properties:
        rating:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
    AlphaNumId:
      type: string
      minLength: 10
      maxLength: 10
      pattern: '^[a-zA-Z0-9]+$'
      example: BqZci3YbHA
    SessionInit:
      type: object
      description: Session initialization data
      properties:
        permission:
          type: integer
          description: the user access level (ignored if null)
          nullable: true
        areas:
          type: array
          description: the user access areas
          items:
            type: string
            description: the user access areas
        interfaces:
          type: array
          description:
            the IDs of the reasoning interfaces enabled in this session (if null or not
            present all the interfaces are used)
          nullable: true
          items:
            type: integer
        size:
          type: integer
          description: the max number of results to return
          default: 10
    InputText:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          example: Here it is the input of the user
    InputSelection:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: the ID of the option selected by the user
    Response:
      type: object
      required:
        - type
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          ANSWER: '#/components/schemas/Answer'
          OPEN_REQUEST: '#/components/schemas/OpenRequest'
          SELECTION: '#/components/schemas/SelectionRequest'
          FORM: '#/components/schemas/FormRequest'
          WAIT: '#/components/schemas/WaitRequest'
    Answer:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - results
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Result'
    OpenRequest:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - request
          properties:
            request:
              type: string
    SelectionRequest:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - message
            - options
          properties:
            message:
              type: string
            options:
              type: array
              items:
                $ref: '#/components/schemas/LabeledElement'
    FormRequest:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - elements
          properties:
            elements:
              type: array
              items:
                $ref: '#/components/schemas/LabeledElement'
    WaitRequest:
      allOf:
        - $ref: '#/components/schemas/Response'
    FormElement:
      type: object
      description: the value given to an element of the form
      required:
        - id
        - value
      properties:
        id:
          type: integer
          description: the ID of the element, unique in the form
        value:
          type: string
          description: the value given for this element
    Result:
      type: object
      required:
        - interfaceId
        - text
        - score
        - documentURI
      properties:
        interfaceId:
          type: integer
        text:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        documentURI:
          type: string
          nullable: true
    LabeledElement:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: number
          format: int32
        label:
          type: string
    Score:
      type: number
      format: double
      example: 0.89
